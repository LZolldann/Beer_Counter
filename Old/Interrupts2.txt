
.include "m16def.inc"
.org 0

.def temp = r16

.org 0x000
         rjmp main            ; Reset Handler
.org INT0addr
         rjmp int0_handler    ; IRQ0 Handler
.org INT1addr
         rjmp int1_handler    ; IRQ0 Handler

main:                         ; hier beginnt das Hauptprogramm

         ldi temp, LOW(RAMEND)
         out SPL, temp
         ldi temp, HIGH(RAMEND)
         out SPH, temp

         ldi temp, 0x00    ; PORT D als input Register 
         out DDRD, temp

         ldi temp, 0xFF		; PORT B output Register 
         out DDRC, temp

         ldi temp, (1<<ISC01)|(1<<ISC11)| ; INT0 auf fallende Flanke konfigurieren
         out MCUCR, temp

         ldi temp, (1<<INT0)|(1<<INT1)  ; INT0  aktivieren
         out GICR, temp

         sei                   ; Interrupts allgemein aktivieren

loop:    rjmp loop             ; eine leere Endlosschleife

int0_handler:
         sbi PORTC, 5
         reti
int1_handler:
         cbi PORTC, 5
         reti